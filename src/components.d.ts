/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppTabs {
    }
    interface AppTut {
    }
    interface CheckIn {
        "getCurrentHabit": { order: number; name: string; id: string; color: string; };
        "habitId": any;
        "zoom": boolean;
    }
    interface ColorPicker {
        "target": any;
    }
    interface EditHabit {
        "habitId": any;
    }
    interface HabitBit {
    }
    interface NewHabit {
    }
    interface YearCalendar {
        "change": () => void;
        "displayDate": string;
        "zoom": boolean;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTabsElement extends Components.AppTabs, HTMLStencilElement {
    }
    var HTMLAppTabsElement: {
        prototype: HTMLAppTabsElement;
        new (): HTMLAppTabsElement;
    };
    interface HTMLAppTutElement extends Components.AppTut, HTMLStencilElement {
    }
    var HTMLAppTutElement: {
        prototype: HTMLAppTutElement;
        new (): HTMLAppTutElement;
    };
    interface HTMLCheckInElement extends Components.CheckIn, HTMLStencilElement {
    }
    var HTMLCheckInElement: {
        prototype: HTMLCheckInElement;
        new (): HTMLCheckInElement;
    };
    interface HTMLColorPickerElement extends Components.ColorPicker, HTMLStencilElement {
    }
    var HTMLColorPickerElement: {
        prototype: HTMLColorPickerElement;
        new (): HTMLColorPickerElement;
    };
    interface HTMLEditHabitElement extends Components.EditHabit, HTMLStencilElement {
    }
    var HTMLEditHabitElement: {
        prototype: HTMLEditHabitElement;
        new (): HTMLEditHabitElement;
    };
    interface HTMLHabitBitElement extends Components.HabitBit, HTMLStencilElement {
    }
    var HTMLHabitBitElement: {
        prototype: HTMLHabitBitElement;
        new (): HTMLHabitBitElement;
    };
    interface HTMLNewHabitElement extends Components.NewHabit, HTMLStencilElement {
    }
    var HTMLNewHabitElement: {
        prototype: HTMLNewHabitElement;
        new (): HTMLNewHabitElement;
    };
    interface HTMLYearCalendarElement extends Components.YearCalendar, HTMLStencilElement {
    }
    var HTMLYearCalendarElement: {
        prototype: HTMLYearCalendarElement;
        new (): HTMLYearCalendarElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "app-tabs": HTMLAppTabsElement;
        "app-tut": HTMLAppTutElement;
        "check-in": HTMLCheckInElement;
        "color-picker": HTMLColorPickerElement;
        "edit-habit": HTMLEditHabitElement;
        "habit-bit": HTMLHabitBitElement;
        "new-habit": HTMLNewHabitElement;
        "year-calendar": HTMLYearCalendarElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppTabs {
    }
    interface AppTut {
    }
    interface CheckIn {
        "getCurrentHabit"?: { order: number; name: string; id: string; color: string; };
        "habitId"?: any;
        "zoom"?: boolean;
    }
    interface ColorPicker {
        "target"?: any;
    }
    interface EditHabit {
        "habitId"?: any;
    }
    interface HabitBit {
    }
    interface NewHabit {
    }
    interface YearCalendar {
        "change"?: () => void;
        "displayDate"?: string;
        "zoom"?: boolean;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-root": AppRoot;
        "app-tabs": AppTabs;
        "app-tut": AppTut;
        "check-in": CheckIn;
        "color-picker": ColorPicker;
        "edit-habit": EditHabit;
        "habit-bit": HabitBit;
        "new-habit": NewHabit;
        "year-calendar": YearCalendar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-tabs": LocalJSX.AppTabs & JSXBase.HTMLAttributes<HTMLAppTabsElement>;
            "app-tut": LocalJSX.AppTut & JSXBase.HTMLAttributes<HTMLAppTutElement>;
            "check-in": LocalJSX.CheckIn & JSXBase.HTMLAttributes<HTMLCheckInElement>;
            "color-picker": LocalJSX.ColorPicker & JSXBase.HTMLAttributes<HTMLColorPickerElement>;
            "edit-habit": LocalJSX.EditHabit & JSXBase.HTMLAttributes<HTMLEditHabitElement>;
            "habit-bit": LocalJSX.HabitBit & JSXBase.HTMLAttributes<HTMLHabitBitElement>;
            "new-habit": LocalJSX.NewHabit & JSXBase.HTMLAttributes<HTMLNewHabitElement>;
            "year-calendar": LocalJSX.YearCalendar & JSXBase.HTMLAttributes<HTMLYearCalendarElement>;
        }
    }
}
